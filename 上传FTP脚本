#!/usr/bin/env python
# coding=utf-8
import os
from ftplib import FTP


class UploadFile():
    """
    上传文件
    """
    def __init__(self):
        username = '***' 
        password = '***'
        host = 'up.resources.***.com'
        port = 39000
        self.path = '/data/rsync/client/' 
        self.ftp = FTP()
        self.ftp.connect(host, port)
        self.ftp.login(username, password) 

    def __exit__(self):
        '''
        结束调用
        '''
        print('上传完成')
        self.ftp.close()
        # 清空文件
        os.remove(self.path + 'urlFILE.txt')
    
    def file_check(self):
        '''
        检查文件
        '''
        fd = open(self.path + 'urlFILE.txt')
        target_files = fd.readlines()
        fd.close()
        
        for file_line in target_files:
            source_file = self.path + file_line.replace('\n', '')
    
            dir_name = file_line.replace('\n', '').split('/')[:-1]

            # 查看文件夹是否存在 并 上传文件
            self.create_dir(dir_name, file_line.replace('\n', ''), source_file)

    def create_dir(self, dir_name, file_name, source_file):
        '''
        递归创建目录
        '''
        for num in range(len(dir_name)):
            # check dir
            try:
                self.ftp.mkd(dir_name[num])
            except:
                pass

            self.ftp.cwd(dir_name[num])

            if num == (len(dir_name)-1):
                self.upload_file(file_name, source_file)

        self.ftp.cwd('/')

    def upload_file(self, file_name, source_file):
        '''
        上传文件
        '''
        print(file_name)
        self.ftp.storbinary('STOR ' + file_name, open(source_file, 'rb'))

    def main(self):
        '''
        执行函数
        '''
        self.file_check()
        self.__exit__()

def main():
    upload = UploadFile()
    upload.main()

if __name__ == '__main__':
    main()
